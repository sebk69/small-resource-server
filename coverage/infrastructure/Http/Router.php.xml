<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="Router.php" path="/infrastructure/Http">
    <totals>
      <lines total="56" comments="5" code="51" executable="21" executed="17" percent="80.95"/>
      <methods count="1" tested="0" percent="0.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Infrastructure\Http\Router" start="18" executable="21" executed="17" crap="9.56">
      <namespace name="Infrastructure\Http"/>
      <method name="dispatch" signature="dispatch(Swoole\Http\Request $req, Swoole\Http\Response $res): void" start="20" end="54" crap="9.56" executable="21" executed="17" coverage="80.952380952381"/>
    </class>
    <coverage>
      <line nr="22">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_POST__resource_dispatches_to_ResourceCreateAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__dispatches_to_ResourceGetAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__unlock_dispatches_to_ResourceUnlockAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_PUT__resource__name___selector__dispatches_to_ResourceUpdateAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_unknown_route_throws_NotFoundHttpException"/>
        <covered by="P\Tests\Unit\RouterTest::__pest_evaluable_Router_throws_NotFound_on_unknown_route"/>
      </line>
      <line nr="23">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_POST__resource_dispatches_to_ResourceCreateAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__dispatches_to_ResourceGetAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__unlock_dispatches_to_ResourceUnlockAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_PUT__resource__name___selector__dispatches_to_ResourceUpdateAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_unknown_route_throws_NotFoundHttpException"/>
        <covered by="P\Tests\Unit\RouterTest::__pest_evaluable_Router_throws_NotFound_on_unknown_route"/>
      </line>
      <line nr="25">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_POST__resource_dispatches_to_ResourceCreateAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__dispatches_to_ResourceGetAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__unlock_dispatches_to_ResourceUnlockAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_PUT__resource__name___selector__dispatches_to_ResourceUpdateAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_unknown_route_throws_NotFoundHttpException"/>
        <covered by="P\Tests\Unit\RouterTest::__pest_evaluable_Router_throws_NotFound_on_unknown_route"/>
      </line>
      <line nr="32">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_POST__resource_dispatches_to_ResourceCreateAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__dispatches_to_ResourceGetAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__unlock_dispatches_to_ResourceUnlockAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_PUT__resource__name___selector__dispatches_to_ResourceUpdateAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_unknown_route_throws_NotFoundHttpException"/>
        <covered by="P\Tests\Unit\RouterTest::__pest_evaluable_Router_throws_NotFound_on_unknown_route"/>
      </line>
      <line nr="33">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_POST__resource_dispatches_to_ResourceCreateAction"/>
      </line>
      <line nr="36">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__dispatches_to_ResourceGetAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__unlock_dispatches_to_ResourceUnlockAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_PUT__resource__name___selector__dispatches_to_ResourceUpdateAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_unknown_route_throws_NotFoundHttpException"/>
        <covered by="P\Tests\Unit\RouterTest::__pest_evaluable_Router_throws_NotFound_on_unknown_route"/>
      </line>
      <line nr="37">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__unlock_dispatches_to_ResourceUnlockAction"/>
      </line>
      <line nr="38">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__unlock_dispatches_to_ResourceUnlockAction"/>
      </line>
      <line nr="39">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__unlock_dispatches_to_ResourceUnlockAction"/>
      </line>
      <line nr="42">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__dispatches_to_ResourceGetAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_PUT__resource__name___selector__dispatches_to_ResourceUpdateAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_unknown_route_throws_NotFoundHttpException"/>
        <covered by="P\Tests\Unit\RouterTest::__pest_evaluable_Router_throws_NotFound_on_unknown_route"/>
      </line>
      <line nr="43">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__dispatches_to_ResourceGetAction"/>
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_PUT__resource__name___selector__dispatches_to_ResourceUpdateAction"/>
      </line>
      <line nr="44">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__dispatches_to_ResourceGetAction"/>
      </line>
      <line nr="45">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_GET__resource__name___selector__dispatches_to_ResourceGetAction"/>
      </line>
      <line nr="47">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_PUT__resource__name___selector__dispatches_to_ResourceUpdateAction"/>
      </line>
      <line nr="48">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_PUT__resource__name___selector__dispatches_to_ResourceUpdateAction"/>
      </line>
      <line nr="49">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_PUT__resource__name___selector__dispatches_to_ResourceUpdateAction"/>
      </line>
      <line nr="53">
        <covered by="P\Tests\Unit\RouterActionTest::__pest_evaluable_unknown_route_throws_NotFoundHttpException"/>
        <covered by="P\Tests\Unit\RouterTest::__pest_evaluable_Router_throws_NotFound_on_unknown_route"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_COMMENT">/*</token>
      </line>
      <line no="3">
        <token name="T_COMMENT"> * This file is a part of Small Swoole Resource Server</token>
      </line>
      <line no="4">
        <token name="T_COMMENT"> * Copyright 2025 - S&#xE9;bastien Kus</token>
      </line>
      <line no="5">
        <token name="T_COMMENT"> * Under MIT Licence</token>
      </line>
      <line no="6">
        <token name="T_COMMENT"> */</token>
      </line>
      <line no="7"/>
      <line no="8">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Infrastructure\Http</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Infrastructure\Http\Exception\NotFoundHttpException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="11">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Swoole\Http\Request</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Swoole\Http\Response</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="13">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Infrastructure\Actions\ResourceCreateAction</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Infrastructure\Actions\ResourceGetAction</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Infrastructure\Actions\ResourceUnlockAction</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Infrastructure\Actions\ResourceUpdateAction</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17"/>
      <line no="18">
        <token name="T_FINAL">final</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Router</token>
      </line>
      <line no="19">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">dispatch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Request</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Response</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="21">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="22">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">server</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'request_uri'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">strtoupper</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">server</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'request_method'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COALESCE">??</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'GET'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24"/>
      <line no="25">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/health'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">status</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_LNUMBER">200</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">header</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Content-Type'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'application/json'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">end</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">json_encode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'heath'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'ok'</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JSON_UNESCAPED_UNICODE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'POST'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'/resource'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">            </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResourceCreateAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">initRequest</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="35"/>
      <line no="36">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'#^/resource/([^/]+)/([^/]+)/unlock$#'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'PUT'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">                </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResourceUnlockAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">initRequest</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">preg_match</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'#^/resource/([^/]+)/([^/]+)$#'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$path</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'GET'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">                </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResourceGetAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">initRequest</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$method</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'PUT'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">                </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResourceUpdateAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">initRequest</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">handle</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$req</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$res</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$m</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_LNUMBER">2</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">                </token>
        <token name="T_RETURN">return</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52"/>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">NotFoundHttpException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Route not found'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56"/>
    </source>
  </file>
</phpunit>
